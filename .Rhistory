x <- make_model("X -> Y")
CausalQueries::get_nodal_types(x)
CausalQueries::interpret_type(x)
make_model("A -> B")
make_model("X->Y")$parameters_df
CausalQueries::realise_outcomes(x)
make_model("A -> B")$causal_types
# do the same with tidyverse
# copilot generates the following code:
mtcars %>% filter(cyl == 4)
library(tidyverse)
library(CausalQueries)
library(knitr)
library(rstan)
library(DeclareDesign)
run <- FALSE
data("lipids_data")
lipids_data |> kable()
lipids_data |>
kable(format = "html")
results <-
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
query_model(query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors")
results
results |>
select(query, given, mean, sd, starts_with("cred")) |>
kable(digits = 2,
caption = "Rows 1 and 2 replicate results in Chickering and Pearl (1997); row 3 returns inferences for complier average effects.")
lipids_data
make_model("X -> M -> Y <- X; Z -> Y") |>
plot()
make_model("X -> M -> Y <- X; Z -> Y") |>
plot(x_coord = 1:4,
y_coord = c(1.5,2,1,2),
title = "With options",
textcol = "white",
textsize = 3,
shape = 18,
nodecol = "grey",
nodesize = 12) +
theme(plot.background = element_rect(colour = "grey", fill=NA, linewidth=2))
make_model("X -> M -> Y <- X; Z -> Y") |>
plot(x_coord = 1:4,
y_coord = c(1.5,2,1,2),
title = "With options",
textcol = "white",
textsize = 3,
shape = 18,
nodecol = "grey",
nodesize = 12)
make_model("A -> B -> C -> D -> E")$parameters_df |> nrow()
make_model("A -> E <- B; C->E<-D")$parameters_df |> nrow()
CausalQueries:::plot.causal_model
methods(plot)
make_model("X -> M -> Y <- X; Z -> Y") |>
plot()
class(.Last.value)
results |>
select(query, given, mean, sd, starts_with("cred")) |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
caption = "") |>
kableExtra::kable_classic_2(latex_options = c("scale_down")) |>
kableExtra::footnote(
general = "Rows 1 and 2 replicate results in @chickering1996clinician; row 3 returns inferences for complier average effects.",
escape = FALSE, fixed_small_size = TRUE, threeparttable = TRUE, general_title = ""
)
results
make_model("X->Y")$parameters_df |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down"))
# Chunk 1
#| include: false
library(tidyverse)
library(CausalQueries)
library(knitr)
library(rstan)
library(DeclareDesign)
options(kableExtra.latex.load_packages = FALSE)
library(kableExtra)
run <- FALSE
# Chunk 2
#| echo: true
#| results: markup
data("lipids_data")
lipids_data
# Chunk 3
#| echo: true
#| eval: false
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
query_model(query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors")
run <- TRUE
if (run) {
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
readr::write_rds("saved/lipids_model.rds")
lipids_model |>
query_model(query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors") |>
readr::write_rds("saved/lipids_results.rds")
}
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
(\(.)
readr::write_rds(x = ., "saved/lipids_model.rds"),
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
(\(.)
readr::write_rds(x = ., "saved/lipids_model.rds"),
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
(\(.)
readr::write_rds(x = ., "saved/lipids_model.rds")
. |>
lipids_model <-
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0)
lipids_model |>
readr::write_rds(x = _, file = "saved/lipids_model.rds")
lipids_model |>
query_model(
query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors") |>
readr::write_rds(x = _, file = "saved/lipids_results.rds")
lipids_model <- read_rds("saved/lipids_model.rds")
results <- read_rds("saved/lipids_results.rds")
results |>
select(query, given, mean, sd, starts_with("cred")) |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down")) |>
kableExtra::footnote(
general = "Rows 1 and 2 replicate results in \\\\citet{chickering1996clinician}; row 3 returns inferences for complier average effects.",
escape = FALSE, fixed_small_size = TRUE, threeparttable = TRUE, general_title = ""
)
make_model("X->Y")$parameters_df |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down"))
cat(rstan::get_stancode(read_rds("saved/fit.rds")))
make_model("X->Y") |>
update_model(data = data,
keep_fit = TRUE)$stan_objects$stan_fit
make_model("X->Y") |>
update_model(data = data,
keep_fit = TRUE) |>
(\(.) .$stan_objects$stan_fit)() |>
write_rds("saved/fit.rds")
# Chunk 1
#| include: false
options(kableExtra.latex.load_packages = FALSE)
library(tidyverse)
library(CausalQueries)
library(knitr)
library(rstan)
library(DeclareDesign)
library(kableExtra)
# Chunk 2
#| echo: true
#| results: markup
data("lipids_data")
lipids_data
# Chunk 3
#| echo: true
#| eval: false
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0) |>
query_model(query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors")
# Chunk 4
#| label: tbl-lipids
#| tbl-cap: "Replication of \\citet{chickering1996clinician}."
#| echo: false
if (params$run) {
lipids_model <-
make_model("Z -> X -> Y; X <-> Y") |>
update_model(lipids_data, refresh = 0)
lipids_model |>
readr::write_rds(x = _, file = "saved/lipids_model.rds")
lipids_model |>
query_model(
query = "Y[X=1] - Y[X=0]",
given = c("All",  "X==0 & Y==0", "X[Z=1] > X[Z=0]"),
using = "posteriors") |>
readr::write_rds(x = _, file = "saved/lipids_results.rds")
}
lipids_model <- read_rds("saved/lipids_model.rds")
results <- read_rds("saved/lipids_results.rds")
results |>
dplyr::select(query, given, mean, sd, starts_with("cred")) |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down")) |>
kableExtra::footnote(
general = "Rows 1 and 2 replicate results in \\\\citet{chickering1996clinician}; row 3 returns inferences for complier average effects.",
escape = FALSE, fixed_small_size = TRUE, threeparttable = TRUE, general_title = ""
)
# Chunk 5
#| echo: true
#| results: markup
#| eval: false
#| include: false
make_model("A -> B -> C -> D -> E")$parameters_df |> nrow()
make_model("A -> E <- B; C->E<-D")$parameters_df |> nrow()
# Chunk 6
#| echo: true
#| results: markup
model <- make_model("X -> M -> Y <- X")
# Chunk 7
#| echo: true
#| eval: false
make_model("X -> M -> Y <- X; Z -> Y") |>
plot()
# Chunk 8
#| echo: true
#| eval: false
make_model("X -> M -> Y <- X; Z -> Y") |>
plot(x_coord = 1:4,
y_coord = c(1.5,2,1,2),
textcol = "white",
textsize = 3,
shape = 18,
nodecol = "grey",
nodesize = 12)
# Chunk 9
#| label: fig-plots
#| echo: false
#| fig-cap: "Examples of model graphs."
#| fig-subcap:
#|   - "Without options"
#|   - "With options"
#| fig-pos: 'h'
#| layout-ncol: 2
make_model("X -> M -> Y <- X; Z -> Y") |>
plot()
make_model("X -> M -> Y <- X; Z -> Y") |>
plot(x_coord = 1:4,
y_coord = c(1.5,2,1,2),
textcol = "white",
textsize = 3,
shape = 18,
nodecol = "grey",
nodesize = 12)
# Chunk 10
#| echo: true
make_model("X->Y")$parameters_df
# Chunk 11
#| label: tbl-params-df
#| echo: false
#| tbl-cap: "Example of Parameters Data Frame"
make_model("X->Y")$parameters_df |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down"))
# Chunk 12
make_model("X -> Y")$nodal_types
# Chunk 13: lookup_types1
model <- make_model("X -> Y <- M ")
interpretations <- interpret_type(model)
interpretations$Y
# Chunk 14: lookup_types2
model <- make_model("X -> Y <- M; W -> Y")
interpretations <- interpret_type(model)
interpretations$Y
# Chunk 15
make_model("X -> Y")$causal_types
# Chunk 16
model <- make_model("X->Y")
realise_outcomes(model) |>
kable()
# Chunk 17
model <- make_model("X->Y")
realise_outcomes(model, dos = list(X=1)) |>
kable()
# Chunk 18
make_model("X->Y") |>
get_parameter_matrix() |>
knitr::kable()
# Chunk 19
model <- make_model("X->Y") |> set_restrictions("Y[X=1] < Y[X=0]")
# Chunk 20
model <- make_model("X->Y") |> set_restrictions(decreasing("X", "Y"))
# Chunk 21
get_parameter_matrix(model)
# Chunk 24
confounded <- make_model("X->Y ; X <-> Y")
confounded$parameters_df |> knitr::kable()
# Chunk 25
get_parameter_matrix(confounded) |> knitr::kable()
# Chunk 26
make_model("A <- X -> B; A <-> X; B <-> X") |>
plot()
# Chunk 27
make_model("X->Y") |> get_priors()
# Chunk 28
make_model("X->Y") |>
set_priors(distribution = "jeffreys") |>
get_priors()
# Chunk 29
make_model("X->Y") |>
set_priors(1:6) |>
get_priors()
# Chunk 30
make_model("X->Y") |>
set_priors(statement = "Y[X=1] > Y[X=0]", alphas = 3) |>
get_priors()
# Chunk 31
make_model("X->Y") |>
set_priors(nodal_type = "01", alphas = 3) |>
get_priors()
# Chunk 32
make_model("X->Y") |>
set_priors(param_names = "Y.01", alphas = 3) |>
get_priors()
# Chunk 33
make_model("X-> M -> Y; X <-> Y") |>
set_priors(node = "Y", nodal_type = c("01","11"), given = "X.1", alphas = c(3,2)) |>
get_priors()
make_model("X-> M -> Y; X <-> Y") |>
set_priors(alter_at = "node == 'Y' & nodal_type %in% c('01','11') & given == 'X.1'", alphas = c(3,2)) |>
get_priors()
# Chunk 34
make_model("X -> Y") |>
set_restrictions(decreasing("X", "Y")) |>
query_model("Y[X=1] - Y[X=0]", n_draws = 10000) |>
kable(digits = 2)
# Chunk 35
make_model("X -> Y") |>
query_model("Y[X=1] > Y[X=0]", n_draws = 10000) |>
knitr::kable()
make_model("X -> M -> Y") |>
query_model("Y[X=1] > Y[X=0]", n_draws = 10000) |>
knitr::kable()
# Chunk 36
make_model("X->Y") |>
get_parameters()
# Chunk 37
make_model("X->Y") |>
set_parameters(statement = "Y[X=1] > Y[X=0]", parameters = .5) |>
get_parameters()
# Chunk 38
model <- make_model("X -> M -> Y")
sample_data_1 <-
model |> make_data(n = 4)
sample_data_1 |> kable()
# Chunk 40
set.seed(1)
sample_data_2 <-
make_data(
model,
n = 8,
nodes = list(c("X", "Y"), "M"),
probs = list(1, .5),
subsets = list(TRUE, "X==1 & Y==0"))
sample_data_2 |> kable()
# Chunk 46
list(uncensored = make_model("X->Y") %>%
update_model(data.frame(X=rep(0:1,5), Y=rep(0:1,5)),
refresh = 0, iter = 3000),
censored = make_model("X->Y") %>%
update_model(data.frame(X=rep(0:1,5), Y=rep(0:1,5)),
censored_types = c("X1Y0",  "X0Y1"),
refresh = 0, iter = 3000)) %>%
query_model(te("X", "Y"), using = "posteriors") |>
select(model, query, mean, sd) |>
kable(digits = 2)
# Chunk 47
model <- make_model('X -> M -> Y <- X')
query <- 'Y[X=1, M=1] > Y[X=0, M=0]'
get_query_types(model, query, map= "nodal_type")
# Chunk 49
if (params$run) {
data  <- fabricate(N = 100, X = complete_ra(N), Y = X)
make_model("X -> Y") |>
update_model(data, iter  = 4000) |>
write_rds("saved/app_2_illus.rds")
}
model <- read_rds("saved/app_2_illus.rds")
model$posterior_distribution |>
ggplot(aes(Y.01 - Y.10)) + geom_histogram() + theme_bw()
# Chunk 50
#| label: fig-query-dist
#| fig-cap: "Prior on 'Probability $Y$ is increasing in $X$'"
#| fig-align: center
#| fig-width: 8
make_model("X -> Y") |>
query_distribution(
query = list(increasing = "(Y[X=1] > Y[X=0])"),
using = "priors") |>
ggplot(aes(increasing)) + geom_histogram() + theme_bw()
# Chunk 51
lipids_model |>
query_model(query = "Y[X=1] - Y[X=0]",
given = c("X==1 & Y==1 & Z==1"),
using = "posteriors")
# Chunk 53
models <- list(
`1` = make_model("X -> Y"),
`2` = make_model("X -> Y") |> set_restrictions("Y[X=1] < Y[X=0]")
)
query_model(
models,
query = list(ATE = "Y[X=1] - Y[X=0]", POS = "Y[X=1] > Y[X=0]"),
given = c(TRUE,  "Y==1 & X==1"),
case_level = c(FALSE, TRUE),
using = c("parameters", "priors"),
expand_grid = TRUE) |>
select(-starts_with("cred")) |>
kable(digits = 2)
# Chunk 54: ch2prep
#CausalQueries:::prep_stan_data(model, compact_data)
make_model("X->Y") |>
update_model(data = data,
keep_fit = TRUE) |>
(\(.) .$stan_objects$stan_fit)() |>
write_rds("saved/fit.rds")
make_model("X->Y") |>
update_model(data = data,
keep_fit = TRUE) |>
quietly() |>
(\(.) .$stan_objects$stan_fit)() |>
write_rds("saved/fit.rds")
make_model("X->Y") |>
quietly(update_model)(data = data,
keep_fit = TRUE) |>
(\(.) .$stan_objects$stan_fit)() |>
write_rds("saved/fit.rds")
library(future)
library(future.apply)
model <- read_rds("saved/app_2_illus.rds")
model$posterior_distribution |>
ggplot(aes(Y.01 - Y.10)) + geom_histogram() + theme_bw()
model
data  <- fabricate(N = 100, X = complete_ra(N), Y = X)
make_model("X -> Y") |>
purrr::quietly(update_model)(data, iter  = 4000) |>
write_rds("saved/app_2_illus.rds")
model <- read_rds("saved/app_2_illus.rds")
model$posterior_distribution |>
ggplot(aes(Y.01 - Y.10)) + geom_histogram() + theme_bw()
model$posterior_distribution
model <-
make_model("X -> Y") |>
update_model(data, iter  = 4000)
model$posterior_distribution |>
ggplot(aes(Y.01 - Y.10)) + geom_histogram()
make_model("X -> Y") |>
purrr::quietly(update_model)(data, iter  = 4000)
model
make_model("X -> Y") |>
update_model(data, iter  = 4000, verbose = FALSE)
make_model("X -> Y") |>
update_model(data, iter  = 4000, refresh = 0)
make_model("X -> M -> Y") |> make_data(n = 4) |> kable()
make_data(make_model("X -> M -> Y"), n = 3, param_type = "prior_draw")
make_model("X -> M -> Y") |> make_data(n = 4) |> kable()
make_data(make_model("X -> M -> Y"), n = 3, param_type = "prior_draw")
sample_data_1 <-
model |>
make_data(n = 4)
sample_data_1 |> collapse_data(model) |> kable()
sample_data_2 |> collapse_data(model) |> kable()
install.packages("emmeans")
confounded <- make_model("X->Y ; X <-> Y")
confounded$parameters_df |>
knitr::kable(
digits = 2,
booktabs = TRUE,
align = "c",
escape = TRUE) |>
kableExtra::kable_classic_2(latex_options = c("scale_down"))
make_model("X -> Y")$nodal_types
make_model("X -> Y")$nodal_types |> `attr<-`(NULL)
make_model("X -> Y")$nodal_types |> `attributes<-`(NULL)
make_model("X -> Y")$nodal_types |> `attr<-`("interpret", NULL)
update.packages("knitr")
install.packages("ragg")
remove.packages("ragg")
install.packages("ragg")
update.packages(ask = FALSE, checkBuilt = TRUE)
citation("causaloptim")
install.packages("causaloptim")
citation("causaloptim")
print(citation("causaloptim"), bibtex = TRUE)
install.packages("tikzDevice")
